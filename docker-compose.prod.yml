version: "3.9"
services:
  backend-1:
    build: ./backend
    command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application
    volumes:
      - ./backend:/backend
    expose:
      - "8000:8000"
    depends_on:
      - db
    restart: always
    env_file:
      - .env
    environment:
      - "DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}"
      - "DJANGO_DEBUG=False"
      - "DJANGO_SECURE_SSL_REDIRECT=False"
      - "DJANGO_SECURE_HSTS_SECONDS=0"
      - "DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS=False"
      - "DJANGO_SECURE_HSTS_PRELOAD=False"
      - "DJANGO_SESSION_COOKIE_SECURE=False"
      - "DJANGO_CSRF_COOKIE_SECURE=False"
      - "POSTGRES_DB=chatdb"
      - "POSTGRES_USER=chatuser"
      - "POSTGRES_PASSWORD=chat123456789"
  frontend:
    build: ./frontend
    expose:
      - "3000"
    restart: always
    environment:
      - "WATCHPACK_POLLING=true"
      - "CHOKIDAR_USEPOLLING=true"
      - "NODE_ENV=development"
    command: npm start
    depends_on:
      - backend-1
    volumes:
      - ./frontend:/frontend
  db:
    image: postgres:13
    volumes:
      - 'postgres_data:/var/lib/postgresql/data/'
    restart: always
    env_file:
      - .env
    environment:
      - "POSTGRES_DB=chatdb"
      - "POSTGRES_USER=chatuser"
      - "POSTGRES_PASSWORD=chat123456789"
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    restart: always
    depends_on:
      - backend-1
      - frontend
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
  redis:
    image: redis:5
    expose:
      - "6379"
    volumes:
      - 'redisdata:/data'
volumes:
  postgres_data:
  redisdata: